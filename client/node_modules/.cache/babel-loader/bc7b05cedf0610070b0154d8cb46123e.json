{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents/u_florida/research/adamus_lab/d3_website/client/src/components/Render/Render.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport RubberDuck from './../../assets/cad-rubber-duck.stl';\nimport PCB from './../../assets/piPATCH-L1 - pcb_ant.STL';\nimport Draggable from './../Draggable/Draggable';\nimport './Render.css';\n\nclass Render extends Component {\n  componentDidMount() {\n    var mesh, renderer, scene, camera, controls, bb, rect;\n    var rotate = 'Y';\n    var vector = new THREE.Vector3(0, -1, 0);\n    var pause = false;\n\n    function load() {\n      var loader = new STLLoader();\n      loader.load(PCB, function (geometry) {\n        geometry.center();\n        var material = new THREE.MeshNormalMaterial();\n        mesh = new THREE.Mesh(geometry, material);\n        var boundingBox = new THREE.Box3().setFromObject(mesh);\n        var sizeHouse = bb.getSize();\n        var sizeObject = boundingBox.getSize();\n        var ratio = sizeObject.divide(sizeHouse);\n        var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n        var invertRatio = 1 / maxRatio;\n        mesh.scale.set(invertRatio, invertRatio, invertRatio);\n        mesh.position.set(0, 0.25, 0);\n        mesh.setRotationFromAxisAngle(vector, Math.PI / 2);\n        scene.add(mesh);\n        animate();\n      });\n    }\n\n    function init() {\n      var container = document.getElementById(\"threejs-product-container\");\n      rect = container.getBoundingClientRect();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(rect.width - 2, rect.height - 2);\n      container.appendChild(renderer.domElement);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xcccccc);\n      camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n      controls = new OrbitControls(camera, container);\n      var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n      var boxMaterial = new THREE.MeshNormalMaterial();\n      var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n      bb = new THREE.Box3().setFromObject(boxMesh);\n      var height = bb.getSize().y;\n      var dist = height / 2 / Math.tan(Math.PI / 360);\n      camera.position.set(dist + 25, dist + 25, dist + 25);\n      camera.lookAt(boxMesh.position);\n      window.addEventListener('resize', onWindowResize, false);\n      document.getElementById(\"threejs-product-container\").addEventListener('mousedown', mousedownfunc, false);\n      document.getElementById(\"threejs-product-container\").addEventListener('mouseup', mouseupfunc, false);\n    }\n\n    function mousedownfunc() {\n      pause = true;\n    }\n\n    function mouseupfunc() {\n      pause = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = rect.width / rect.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(rect.width - 2, rect.height - 2);\n    }\n\n    function animate() {\n      if (!pause) {\n        if (rotate === 'X') {\n          mesh.rotation.x += 0.01;\n        } else if (rotate === 'Y') {\n          mesh.rotation.y += 0.01;\n        } else if (rotate === 'Z') {\n          mesh.rotation.z += 0.01;\n        }\n      }\n\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    init();\n    load();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"product-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-column-55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"threejs-product-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flex-column-45 product-column-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"A Rubber Duck.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"This is just an example.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Of a React.js component rendering a .stl file.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Using Three.js.\")), React.createElement(Draggable, {\n      x: 20,\n      y: 550,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticky\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticky-text\"\n      /*contentEditable=\"true\" spellCheck=\"false\"*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Coming Soon! \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \"[Move Me]\")))));\n  }\n\n}\n\nexport default Render;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents/u_florida/research/adamus_lab/d3_website/client/src/components/Render/Render.js"],"names":["React","Component","THREE","OrbitControls","STLLoader","RubberDuck","PCB","Draggable","Render","componentDidMount","mesh","renderer","scene","camera","controls","bb","rect","rotate","vector","Vector3","pause","load","loader","geometry","center","material","MeshNormalMaterial","Mesh","boundingBox","Box3","setFromObject","sizeHouse","getSize","sizeObject","ratio","divide","maxRatio","Math","max","x","y","z","invertRatio","scale","set","position","setRotationFromAxisAngle","PI","add","animate","init","container","document","getElementById","getBoundingClientRect","WebGLRenderer","antialias","setSize","width","height","appendChild","domElement","Scene","background","Color","PerspectiveCamera","boxGeometry","BoxGeometry","boxMaterial","boxMesh","dist","tan","lookAt","window","addEventListener","onWindowResize","mousedownfunc","mouseupfunc","aspect","updateProjectionMatrix","rotation","requestAnimationFrame","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\nimport RubberDuck from './../../assets/cad-rubber-duck.stl';\nimport PCB from './../../assets/piPATCH-L1 - pcb_ant.STL';\nimport Draggable from './../Draggable/Draggable'\nimport './Render.css'\n\nclass Render extends Component {\n    componentDidMount() {\n        var mesh, renderer, scene, camera, controls, bb, rect;\n        var rotate = 'Y';\n        var vector = new THREE.Vector3(0, -1, 0);\n        var pause = false;\n\n        function load() {\n            var loader = new STLLoader();\n            loader.load(PCB, function (geometry) {\n                geometry.center();\n                var material = new THREE.MeshNormalMaterial();\n                mesh = new THREE.Mesh(geometry, material);\n                var boundingBox = new THREE.Box3().setFromObject(mesh);\n                var sizeHouse = bb.getSize();\n                var sizeObject = boundingBox.getSize();\n                var ratio = sizeObject.divide(sizeHouse);\n                var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n                var invertRatio = 1 / maxRatio;\n                mesh.scale.set(invertRatio, invertRatio, invertRatio);\n                mesh.position.set(0, 0.25, 0);\n                mesh.setRotationFromAxisAngle(vector, Math.PI/2);\n                scene.add(mesh);\n                animate();\n            });\n\n        }\n\n        function init() {\n            var container = document.getElementById(\"threejs-product-container\");\n            rect = container.getBoundingClientRect();\n\n            renderer = new THREE.WebGLRenderer({ antialias: true });\n            renderer.setSize(rect.width - 2, rect.height - 2);\n\n            container.appendChild(renderer.domElement);\n\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0xcccccc);\n            camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n            controls = new OrbitControls(camera, container);\n\n            var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n            var boxMaterial = new THREE.MeshNormalMaterial();\n            var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n            bb = new THREE.Box3().setFromObject(boxMesh);\n            var height = bb.getSize().y;\n            var dist = height / 2 / Math.tan(Math.PI / 360);\n            camera.position.set(dist + 25, dist + 25, dist + 25);\n            camera.lookAt(boxMesh.position);\n\n            window.addEventListener('resize', onWindowResize, false);\n            document.getElementById(\"threejs-product-container\").addEventListener('mousedown', mousedownfunc, false);\n            document.getElementById(\"threejs-product-container\").addEventListener('mouseup', mouseupfunc, false);\n        }\n\n        function mousedownfunc() {\n            pause = true;\n        }\n\n        function mouseupfunc() {\n            pause = false;\n        }\n\n        function onWindowResize() {\n            camera.aspect = (rect.width) / (rect.height);\n            camera.updateProjectionMatrix();\n            renderer.setSize(rect.width - 2, rect.height - 2);\n        }\n\n        function animate() {\n            if (!pause) {\n                if (rotate === 'X') {\n                    mesh.rotation.x += 0.01;\n                }\n                else if (rotate === 'Y') {\n                    mesh.rotation.y += 0.01;\n                }\n                else if (rotate === 'Z') {\n                    mesh.rotation.z += 0.01;\n                }\n            }\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n\n        init();\n        load();\n    }\n\n    render() {\n        return (\n            <div className=\"product-wrapper\">\n                <div className=\"row\">\n                    <div className=\"flex-column-55\">\n                        <div id=\"threejs-product-container\"></div>\n                    </div>\n                    <div className=\"flex-column-45 product-column-right\">\n                        <div className=\"product-title\">A Rubber Duck.</div>\n                        <p>\n                            This is just an example.\n                        </p>\n                        <p>\n                            Of a React.js component rendering a .stl file. \n                        </p>\n                        <p>\n                            Using Three.js.\n                        </p>\n                    </div>\n                    <Draggable x={20} y={550}>\n                        {/*Note: The 'sticky' class CSS is located in '~/assets/Theme.css'*/}\n                        <div className=\"sticky\">\n                            <div className=\"sticky-text\"  /*contentEditable=\"true\" spellCheck=\"false\"*/>\n                                Coming Soon! <br/>\n                                [Move Me]\n                            </div>\n                        </div>\n                    </Draggable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Render;\n"]},"metadata":{},"sourceType":"module"}