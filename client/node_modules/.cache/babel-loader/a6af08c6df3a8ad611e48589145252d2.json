{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { Redirect } from 'react-router-dom';\n\nvar axios = require('axios');\n\nclass Render extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = files => {\n      var file = files[0];\n      this.renderFile(file);\n    };\n\n    this.getMats = () => {\n      axios.get(\"/api/mat\").then(mat => {\n        var matNames = [];\n        mat.data.forEach(function (element) {\n          materialObjects.push(element);\n          matNames.push(element.name);\n        });\n        this.setState({\n          materialsList: matNames\n        });\n        this.setState({\n          mats: mat.data\n        });\n      });\n    };\n\n    this.onChangeFileUpload = event => {\n      uploadedFile = event.target.files[0];\n    };\n\n    this.state = {\n      currentFile: null,\n      link: null,\n      fileRendered: false\n    };\n    this.onChangeFileUpload = this.onChangeFileUpload.bind(this);\n  }\n\n  handleClick() {\n    this.refs.fileUploader.click();\n  }\n\n  renderFile(file) {\n    if (file) {\n      document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n      this.setState({\n        fileRendered: true\n      });\n      this.openFile(file);\n      var text = document.getElementById('but-upload');\n      this.setState({\n        currentFile: file\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mesh = null;\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n    this.controls = null;\n  }\n\n  componentDidMount() {\n    var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n    var rotate = 'Z';\n    var vector = new THREE.Vector3(-1, 0, 0);\n    var pause = false;\n\n    this.openFile = file => {\n      uploadedFile = file;\n\n      if (!mesh) {\n        init();\n        load(file, true);\n      } else {\n        update();\n        load(file, false);\n      }\n    };\n\n    function update() {\n      scene.remove(mesh);\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n\n    function load(file, doAnimate) {\n      const tempURL = URL.createObjectURL(file);\n      var str = file.name.split('.').pop();\n      var ext = str.toLowerCase();\n      var loader;\n\n      if (ext === 'stl') {\n        loader = new STLLoader();\n        loader.load(tempURL, function (geometry) {\n          geometry.center();\n          make(geometry, doAnimate);\n        });\n      } else if (ext === 'obj') {\n        loader = new OBJLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === 'fbx') {\n        loader = new FBXLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === '3ds') {\n        loader = new TDSLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      }\n\n      URL.revokeObjectURL(tempURL);\n    }\n\n    function make(geometry, doAnimate) {\n      var material;\n\n      if (selectedMaterial) {\n        material = selectedMaterial;\n      } else {\n        material = new THREE.MeshNormalMaterial();\n      }\n\n      mesh = new THREE.Mesh(geometry, material);\n      var boundingBox = new THREE.Box3().setFromObject(mesh);\n      var sizeHouse = bb.getSize();\n      var sizeObject = boundingBox.getSize();\n      var ratio = sizeObject.divide(sizeHouse);\n      var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n      var invertRatio = 1 / maxRatio;\n      mesh.scale.set(invertRatio, invertRatio, invertRatio);\n      mesh.position.set(0, 0.25, 0);\n      mesh.setRotationFromAxisAngle(vector, Math.PI / 2);\n      scene.add(mesh);\n\n      if (doAnimate) {\n        animate();\n      }\n    }\n\n    function init() {\n      var container = document.getElementById(\"container\");\n      rect = container.getBoundingClientRect();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(rect.width - 2, rect.height - 2);\n      container.appendChild(renderer.domElement);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF8F9FA);\n      camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n      controls = new OrbitControls(camera, container);\n      var axes = new THREE.AxesHelper(1);\n      axes.position.set(0, -0.25, 0);\n      scene.add(axes);\n      var gridHelper = new THREE.GridHelper(1, 5);\n      gridHelper.position.set(0, -0.25, 0);\n      scene.add(gridHelper);\n      var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n      var boxMaterial = new THREE.MeshNormalMaterial();\n      var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n      bb = new THREE.Box3().setFromObject(boxMesh);\n      var height = bb.getSize().y;\n      var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n      camera.position.set(dist + 25, dist + 25, dist + 25);\n      camera.lookAt(boxMesh.position);\n      camera.updateProjectionMatrix();\n      window.addEventListener('resize', onWindowResize, false);\n      document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n      document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n    }\n\n    function mousedownfunc() {\n      pause = true;\n    }\n\n    function mouseupfunc() {\n      pause = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = rect.width / rect.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(rect.width - 2, rect.height - 2);\n    }\n\n    function animate() {\n      if (!pause) {\n        if (rotate === 'X') {\n          mesh.rotation.x += 0.01;\n        } else if (rotate === 'Y') {\n          mesh.rotation.y += 0.01;\n        } else if (rotate === 'Z') {\n          mesh.rotation.z += 0.01;\n        }\n      }\n\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n\n  getSupportedFileString() {\n    return supportedFileExtensions.join(\", \");\n  } //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n  //Gets the materials and finishes from the API\n\n\n  handleChangeNext(value) {\n    console.log('Sending'); //Maybe need to send?\n    //countryCode: this.state.countryCode, stateCode: this.state.stateCode, city: city, zipcode: zipcode, currency: currency\n  } //Changes the finishes based on the material chosen\n\n\n  handleChangeMaterial(eventKey) {\n    var string = eventKey.toString();\n    var array = string.split(',');\n    var index = array[0];\n    var name = array[1];\n    var text = document.getElementById('but-material');\n    text.textContent = name;\n    this.setState({\n      finishState: false\n    });\n    materialzID = materialObjects[index].materialID;\n    finishesObjects = materialObjects[index].finishes;\n    finishNames = [];\n    materialz = name;\n    var materialChosen = this.state.mats.find(isMaterial);\n    console.log(materialChosen);\n    materialChosen.finishes.forEach(function (element) {\n      finishes.push(element);\n      finishNames.push(element.name);\n    });\n    this.setState({\n      finishList: finishNames,\n      finish: this.state.finishList[0]\n    });\n    finishID = finishes[0].finishID;\n    this.updateMaterial(name, finishNames[0]);\n    document.getElementById('but-material').style.borderColor = \"#949494\";\n    document.getElementById('but-finish').style.borderColor = \"#949494\";\n  }\n\n  checkFinish() {\n    if (this.state.finishState) {\n      return \"Select\";\n    } else {\n      return this.state.finishList[0];\n    }\n  }\n\n  handleChangeFinish(eventKey) {\n    var string = eventKey.toString();\n    var array = string.split(',');\n    var index = array[0];\n    var name = array[1];\n    var text = document.getElementById('but-finish');\n    text.textContent = name;\n    finishID = finishes[index].finishID;\n    this.setState({\n      finish: name\n    });\n    this.updateMaterial(materialz, name);\n    document.getElementById('but-finish').style.borderColor = \"#949494\";\n  }\n\n  handleSubmit(event) {\n    if (materialzID && finishID && this.state.scale) {\n      var text = document.getElementById('priceText');\n      text.textContent = \"Calculating\";\n      document.getElementById('wave').style.display = '';\n      this.setState({\n        cartState: false\n      });\n      this.setState({\n        error: ' '\n      });\n      event.preventDefault();\n      const reactData = {\n        material: materialzID,\n        finish: finishID,\n        countryCode: this.state.countryCode,\n        stateCode: this.state.stateCode,\n        city: city,\n        zipcode: zipcode,\n        currency: currency,\n        scale: this.state.scale,\n        url: url\n      }; //Send the information to Price.server.controller\n\n      axios.post(\"/api/sendMat\", reactData).then(price => //Get the price back from Price.server.controller\n      {\n        console.log(price);\n        this.setState({\n          price: price.data.modelPrice\n        });\n        this.setState({\n          token: price.data.token\n        });\n\n        if (this.state.price == '0') {\n          this.setState({\n            error: \"The dimensions of the model are too large or too small.\"\n          });\n          text.textContent = \"Error\";\n          document.getElementById('wave').style.display = 'none';\n        } else {\n          this.setState({\n            buttonDisabledState: false\n          });\n          text.textContent = \"Add to Cart for: $\" + price.data.modelPrice;\n          document.getElementById('wave').style.display = 'none';\n        }\n      }).catch(err => {\n        text.textContent = \"Error: Please Refresh the Page!\";\n        document.getElementById('wave').style.display = 'none';\n        console.log('error', err);\n      });\n    } else {\n      if (!materialzID) {\n        document.getElementById('but-material').style.borderColor = \"#e32c2b\";\n      }\n\n      if (!finishID) {\n        document.getElementById('but-finish').style.borderColor = \"#e32c2b\";\n      }\n\n      if (!this.state.scale) {\n        document.getElementById('but-scale').style.borderColor = \"#e32c2b\";\n      }\n    }\n  }\n\n  handleChangeScale(eventKey) {\n    this.state.scale = eventKey / 100;\n    var text = document.getElementById('but-scale');\n    text.textContent = eventKey + '%';\n    document.getElementById('but-scale').style.borderColor = \"#949494\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      noClick: this.state.fileRendered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      id: \"infoAndInstruc\",\n      style: {\n        position: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), React.createElement(\"div\", Object.assign({\n      id: \"container\",\n      style: {\n        postion: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Render;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js"],"names":["React","Component","THREE","Dropzone","Button","DropdownButton","Dropdown","ButtonGroup","ReactTooltip","OrbitControls","STLLoader","OBJLoader","FBXLoader","TDSLoader","Redirect","axios","require","Render","constructor","props","onDrop","files","file","renderFile","getMats","get","then","mat","matNames","data","forEach","element","materialObjects","push","name","setState","materialsList","mats","onChangeFileUpload","event","uploadedFile","target","state","currentFile","link","fileRendered","bind","handleClick","refs","fileUploader","click","document","getElementById","style","visibility","openFile","text","componentWillUnmount","mesh","renderer","scene","camera","controls","componentDidMount","bb","rect","selectedMaterial","rotate","vector","Vector3","pause","init","load","update","remove","geometry","dispose","material","doAnimate","tempURL","URL","createObjectURL","str","split","pop","ext","toLowerCase","loader","center","make","object","g","Geometry","fromBufferGeometry","children","revokeObjectURL","MeshNormalMaterial","Mesh","boundingBox","Box3","setFromObject","sizeHouse","getSize","sizeObject","ratio","divide","maxRatio","Math","max","x","y","z","invertRatio","scale","set","position","setRotationFromAxisAngle","PI","add","animate","container","getBoundingClientRect","WebGLRenderer","antialias","setSize","width","height","appendChild","domElement","Scene","background","Color","PerspectiveCamera","axes","AxesHelper","gridHelper","GridHelper","boxGeometry","BoxGeometry","boxMaterial","boxMesh","dist","tan","lookAt","updateProjectionMatrix","window","addEventListener","onWindowResize","mousedownfunc","mouseupfunc","aspect","rotation","requestAnimationFrame","render","getSupportedFileString","supportedFileExtensions","join","handleChangeNext","value","console","log","handleChangeMaterial","eventKey","string","toString","array","index","textContent","finishState","materialzID","materialID","finishesObjects","finishes","finishNames","materialz","materialChosen","find","isMaterial","finishList","finish","finishID","updateMaterial","borderColor","checkFinish","handleChangeFinish","handleSubmit","display","cartState","error","preventDefault","reactData","countryCode","stateCode","city","zipcode","currency","url","post","price","modelPrice","token","buttonDisabledState","catch","err","handleChangeScale","getRootProps","getInputProps","isDragActive","marginRight","borderStyle","justifyContent","alignItems","backgroundColor","postion"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone'\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader';\nimport {TDSLoader} from 'three/examples/jsm/loaders/TDSLoader';\nimport {Redirect} from 'react-router-dom';\nvar axios = require('axios');\n\nclass Render extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentFile: null,\n            link: null,\n            fileRendered: false\n        };\n\n        this.onChangeFileUpload = this.onChangeFileUpload.bind(this)\n    }\n\n    handleClick() {\n        this.refs.fileUploader.click();\n    }\n\n\n    renderFile(file) {\n        if (file) {\n          document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n          this.setState({ fileRendered: true });\n          this.openFile(file);\n          var text = document.getElementById('but-upload');\n          this.setState({ currentFile: file });\n        }\n    }\n\n    onDrop = (files) => {\n        var file = files[0];\n        this.renderFile(file);\n    }\n\n    componentWillUnmount() {\n        this.mesh = null;\n        this.renderer = null;\n        this.scene = null;\n        this.camera = null;\n        this.controls = null;\n    }\n\n    componentDidMount() {\n        var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n        var rotate = 'Z';\n        var vector = new THREE.Vector3(-1, 0, 0);\n        var pause = false;\n\n        this.openFile = (file) => {\n            uploadedFile = file;\n            if (!mesh) {\n                init();\n                load(file, true);\n            }\n            else {\n                update();\n                load(file, false);\n            }\n        }\n\n\n        function update() {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n            mesh.material.dispose();\n        }\n\n        function load(file, doAnimate) {\n            const tempURL = URL.createObjectURL(file);\n\n            var str = file.name.split('.').pop();\n            var ext = str.toLowerCase();\n            var loader;\n\n            if (ext === 'stl') {\n                loader = new STLLoader();\n                loader.load(tempURL, function (geometry) {\n                    geometry.center();\n                    make(geometry, doAnimate);\n                });\n            }\n            else if (ext === 'obj') {\n                loader = new OBJLoader();\n                loader.load(tempURL, function (object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === 'fbx') {\n                loader = new FBXLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === '3ds') {\n                loader = new TDSLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n\n            URL.revokeObjectURL(tempURL);\n        }\n\n        function make(geometry, doAnimate) {\n            var material;\n            if (selectedMaterial) {\n                material = selectedMaterial;\n            }\n            else {\n                material = new THREE.MeshNormalMaterial();\n            }\n            mesh = new THREE.Mesh(geometry, material);\n            var boundingBox = new THREE.Box3().setFromObject(mesh);\n            var sizeHouse = bb.getSize();\n            var sizeObject = boundingBox.getSize();\n            var ratio = sizeObject.divide(sizeHouse);\n            var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n            var invertRatio = 1 / maxRatio;\n            mesh.scale.set(invertRatio, invertRatio, invertRatio);\n            mesh.position.set(0, 0.25, 0);\n            mesh.setRotationFromAxisAngle(vector, Math.PI/2);\n            scene.add(mesh);\n            if (doAnimate) {\n                animate();\n            }\n        }\n\n        function init() {\n            var container = document.getElementById(\"container\");\n            rect = container.getBoundingClientRect();\n\n            renderer = new THREE.WebGLRenderer({ antialias: true });\n            renderer.setSize(rect.width - 2, rect.height - 2);\n\n            container.appendChild(renderer.domElement);\n\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0xF8F9FA);\n            camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n            controls = new OrbitControls(camera, container);\n\n            var axes = new THREE.AxesHelper(1);\n            axes.position.set(0, -0.25, 0);\n            scene.add(axes);\n\n            var gridHelper = new THREE.GridHelper(1, 5);\n            gridHelper.position.set(0, -0.25, 0);\n            scene.add(gridHelper);\n\n            var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n            var boxMaterial = new THREE.MeshNormalMaterial();\n            var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n            bb = new THREE.Box3().setFromObject(boxMesh);\n            var height = bb.getSize().y;\n            var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n            camera.position.set(dist + 25, dist + 25, dist + 25);\n            camera.lookAt(boxMesh.position);\n            camera.updateProjectionMatrix();\n\n            window.addEventListener('resize', onWindowResize, false);\n            document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n            document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n        }\n\n        function mousedownfunc() {\n            pause = true;\n        }\n\n        function mouseupfunc() {\n            pause = false;\n        }\n\n        function onWindowResize() {\n            camera.aspect = (rect.width) / (rect.height);\n            camera.updateProjectionMatrix();\n            renderer.setSize(rect.width - 2, rect.height - 2);\n        }\n\n        function animate() {\n            if (!pause) {\n                if (rotate === 'X') {\n                    mesh.rotation.x += 0.01;\n                }\n                else if (rotate === 'Y') {\n                    mesh.rotation.y += 0.01;\n                }\n                else if (rotate === 'Z') {\n                    mesh.rotation.z += 0.01;\n                }\n            }\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n    }\n\n    getSupportedFileString() {\n      return supportedFileExtensions.join(\", \")\n    }\n\n    //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n    //Gets the materials and finishes from the API\n    getMats = () =>\n    {\n        axios.get(\"/api/mat\")\n        .then((mat) =>\n        {\n            var matNames = [];\n            mat.data.forEach(function(element){\n                materialObjects.push(element)\n                matNames.push(element.name)\n            });\n            this.setState({ materialsList: matNames })\n            this.setState({mats: mat.data})\n        })\n    }\n\n    handleChangeNext(value){\n        console.log('Sending')\n        //Maybe need to send?\n        //countryCode: this.state.countryCode, stateCode: this.state.stateCode, city: city, zipcode: zipcode, currency: currency\n    }\n\n    //Changes the finishes based on the material chosen\n    handleChangeMaterial(eventKey) {\n        var string = eventKey.toString();\n        var array = string.split(',');\n        var index = array[0];\n        var name = array[1];\n        var text = document.getElementById('but-material');\n        text.textContent = name;\n        this.setState({finishState: false});\n\n        materialzID = materialObjects[index].materialID;\n        finishesObjects = materialObjects[index].finishes\n\n        finishNames = [];\n        materialz = name;\n        var materialChosen = this.state.mats.find(isMaterial);\n        console.log(materialChosen)\n\n        materialChosen.finishes.forEach(function(element){\n            finishes.push(element)\n            finishNames.push(element.name);\n        });\n\n        this.setState({finishList: finishNames, finish: this.state.finishList[0]})\n        finishID = finishes[0].finishID;\n\n        this.updateMaterial(name, finishNames[0]);\n        document.getElementById('but-material').style.borderColor = \"#949494\";\n        document.getElementById('but-finish').style.borderColor = \"#949494\";\n    }\n\n    checkFinish() {\n        if (this.state.finishState) {\n            return \"Select\";\n        }\n        else {\n            return this.state.finishList[0];\n        }\n    }\n\n    handleChangeFinish(eventKey) {\n        var string = eventKey.toString();\n        var array = string.split(',');\n        var index = array[0];\n        var name = array[1];\n        var text = document.getElementById('but-finish');\n        text.textContent = name;\n\n        finishID = finishes[index].finishID;\n        this.setState({finish: name})\n        this.updateMaterial(materialz, name);\n        document.getElementById('but-finish').style.borderColor = \"#949494\";\n    }\n\n    onChangeFileUpload=event=>{\n        uploadedFile = event.target.files[0];\n    }\n\n    handleSubmit(event) {\n        if (materialzID && finishID && this.state.scale) {\n            var text = document.getElementById('priceText');\n            text.textContent = \"Calculating\";\n            document.getElementById('wave').style.display = '';\n            this.setState({cartState: false});\n            this.setState({error: ' '});\n            event.preventDefault();\n\n            const reactData = {\n                material: materialzID,\n                finish: finishID,\n                countryCode: this.state.countryCode,\n                stateCode: this.state.stateCode,\n                city: city,\n                zipcode: zipcode,\n                currency: currency,\n                scale: this.state.scale,\n                url: url\n            }\n\n            //Send the information to Price.server.controller\n            axios.post(\"/api/sendMat\", reactData)\n                .then((price) => //Get the price back from Price.server.controller\n                {\n                    console.log(price)\n                    this.setState({price: price.data.modelPrice})\n                    this.setState({token: price.data.token})\n                    if (this.state.price == '0') {\n                        this.setState({error: \"The dimensions of the model are too large or too small.\"})\n                        text.textContent = \"Error\";\n                        document.getElementById('wave').style.display = 'none';\n                    } else {\n                        this.setState({buttonDisabledState: false});\n                      text.textContent = \"Add to Cart for: $\" + price.data.modelPrice;\n                      document.getElementById('wave').style.display = 'none';\n                    }\n                })\n                .catch((err) => {\n                    text.textContent = \"Error: Please Refresh the Page!\";\n                    document.getElementById('wave').style.display = 'none';\n                    console.log('error', err)\n                })\n        }\n        else {\n            if (!materialzID) {\n                document.getElementById('but-material').style.borderColor = \"#e32c2b\";\n            }\n            if (!finishID) {\n                document.getElementById('but-finish').style.borderColor = \"#e32c2b\";\n            }\n            if (!this.state.scale) {\n                document.getElementById('but-scale').style.borderColor = \"#e32c2b\";\n            }\n        }\n    }\n\n    handleChangeScale(eventKey){\n        this.state.scale = eventKey/100;\n        var text = document.getElementById('but-scale');\n        text.textContent = eventKey + '%';\n\n        document.getElementById('but-scale').style.borderColor = \"#949494\";\n    }\n\n    render() {\n        return (\n            <div>\n                    <div>\n                        <Dropzone onDrop={this.onDrop} noClick={this.state.fileRendered}>{({ getRootProps, getInputProps, isDragActive }) => (\n                            <div>\n                                <div id=\"infoAndInstruc\" style={{ position: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n\n                                <div id=\"container\" style={{ postion: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n                            </div>\n                        )}\n                        </Dropzone>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Render;\n"]},"metadata":{},"sourceType":"module"}