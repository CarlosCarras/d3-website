{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { Redirect } from 'react-router-dom';\n\nvar axios = require('axios');\n\nclass Render extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = files => {\n      var file = files[0];\n      this.renderFile(file);\n    };\n\n    this.state = {\n      currentFile: null,\n      link: null,\n      fileRendered: false\n    };\n  }\n\n  handleClick() {\n    this.refs.fileUploader.click();\n  }\n\n  renderFile(file) {\n    document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n    this.setState({\n      fileRendered: true\n    });\n    this.openFile(file);\n    var text = document.getElementById('but-upload');\n    this.setState({\n      currentFile: file\n    });\n  }\n\n  componentWillUnmount() {\n    this.mesh = null;\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n    this.controls = null;\n  }\n\n  componentDidMount() {\n    var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n    var rotate = 'Z';\n    var vector = new THREE.Vector3(-1, 0, 0);\n    var pause = false;\n\n    this.openFile = file => {\n      uploadedFile = file;\n\n      if (!mesh) {\n        init();\n        load(file, true);\n      } else {\n        update();\n        load(file, false);\n      }\n    };\n\n    function update() {\n      scene.remove(mesh);\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n\n    function load(file, doAnimate) {\n      const tempURL = URL.createObjectURL(file);\n      var str = file.name.split('.').pop();\n      var ext = str.toLowerCase();\n      var loader = new STLLoader();\n      loader.load(tempURL, function (geometry) {\n        geometry.center();\n        make(geometry);\n      });\n    }\n\n    function make(geometry) {\n      var material = new THREE.MeshNormalMaterial();\n      mesh = new THREE.Mesh(geometry, material);\n      var boundingBox = new THREE.Box3().setFromObject(mesh);\n      var sizeHouse = bb.getSize();\n      var sizeObject = boundingBox.getSize();\n      var ratio = sizeObject.divide(sizeHouse);\n      var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n      var invertRatio = 1 / maxRatio;\n      mesh.scale.set(invertRatio, invertRatio, invertRatio);\n      mesh.position.set(0, 0.25, 0);\n      mesh.setRotationFromAxisAngle(vector, Math.PI / 2);\n      scene.add(mesh);\n      animate();\n    }\n\n    function init() {\n      var container = document.getElementById(\"container\");\n      rect = container.getBoundingClientRect();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(rect.width - 2, rect.height - 2);\n      container.appendChild(renderer.domElement);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF8F9FA);\n      camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n      controls = new OrbitControls(camera, container);\n      var axes = new THREE.AxesHelper(1);\n      axes.position.set(0, -0.25, 0);\n      scene.add(axes);\n      var gridHelper = new THREE.GridHelper(1, 5);\n      gridHelper.position.set(0, -0.25, 0);\n      scene.add(gridHelper);\n      var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n      var boxMaterial = new THREE.MeshNormalMaterial();\n      var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n      bb = new THREE.Box3().setFromObject(boxMesh);\n      var height = bb.getSize().y;\n      var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n      camera.position.set(dist + 25, dist + 25, dist + 25);\n      camera.lookAt(boxMesh.position);\n      camera.updateProjectionMatrix();\n      window.addEventListener('resize', onWindowResize, false);\n      document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n      document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n    }\n\n    function mousedownfunc() {\n      pause = true;\n    }\n\n    function mouseupfunc() {\n      pause = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = rect.width / rect.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(rect.width - 2, rect.height - 2);\n    }\n\n    function animate() {\n      if (!pause) {\n        if (rotate === 'X') {\n          mesh.rotation.x += 0.01;\n        } else if (rotate === 'Y') {\n          mesh.rotation.y += 0.01;\n        } else if (rotate === 'Z') {\n          mesh.rotation.z += 0.01;\n        }\n      }\n\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      noClick: this.state.fileRendered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      id: \"infoAndInstruc\",\n      style: {\n        position: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(\"div\", Object.assign({\n      id: \"container\",\n      style: {\n        postion: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Render;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js"],"names":["React","Component","THREE","Dropzone","Button","DropdownButton","Dropdown","ButtonGroup","ReactTooltip","OrbitControls","STLLoader","Redirect","axios","require","Render","constructor","props","onDrop","files","file","renderFile","state","currentFile","link","fileRendered","handleClick","refs","fileUploader","click","document","getElementById","style","visibility","setState","openFile","text","componentWillUnmount","mesh","renderer","scene","camera","controls","componentDidMount","bb","rect","uploadedFile","selectedMaterial","rotate","vector","Vector3","pause","init","load","update","remove","geometry","dispose","material","doAnimate","tempURL","URL","createObjectURL","str","name","split","pop","ext","toLowerCase","loader","center","make","MeshNormalMaterial","Mesh","boundingBox","Box3","setFromObject","sizeHouse","getSize","sizeObject","ratio","divide","maxRatio","Math","max","x","y","z","invertRatio","scale","set","position","setRotationFromAxisAngle","PI","add","animate","container","getBoundingClientRect","WebGLRenderer","antialias","setSize","width","height","appendChild","domElement","Scene","background","Color","PerspectiveCamera","axes","AxesHelper","gridHelper","GridHelper","boxGeometry","BoxGeometry","boxMaterial","boxMesh","dist","tan","lookAt","updateProjectionMatrix","window","addEventListener","onWindowResize","mousedownfunc","mouseupfunc","aspect","rotation","requestAnimationFrame","render","getRootProps","getInputProps","isDragActive","marginRight","borderStyle","display","justifyContent","alignItems","backgroundColor","postion"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone'\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\nimport {Redirect} from 'react-router-dom';\nvar axios = require('axios');\n\nclass Render extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentFile: null,\n            link: null,\n            fileRendered: false\n        };\n    }\n\n    handleClick() {\n        this.refs.fileUploader.click();\n    }\n\n    renderFile(file) {\n          document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n          this.setState({ fileRendered: true });\n          this.openFile(file);\n          var text = document.getElementById('but-upload');\n          this.setState({ currentFile: file });\n    }\n\n    onDrop = (files) => {\n        var file = files[0];\n        this.renderFile(file);\n    }\n\n    componentWillUnmount() {\n        this.mesh = null;\n        this.renderer = null;\n        this.scene = null;\n        this.camera = null;\n        this.controls = null;\n    }\n\n    componentDidMount() {\n        var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n        var rotate = 'Z';\n        var vector = new THREE.Vector3(-1, 0, 0);\n        var pause = false;\n\n        this.openFile = (file) => {\n            uploadedFile = file;\n            if (!mesh) {\n                init();\n                load(file, true);\n            }\n            else {\n                update();\n                load(file, false);\n            }\n        }\n\n\n        function update() {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n            mesh.material.dispose();\n        }\n\n        function load(file, doAnimate) {\n            const tempURL = URL.createObjectURL(file);\n\n            var str = file.name.split('.').pop();\n            var ext = str.toLowerCase();\n            var loader = new STLLoader();\n            loader.load(tempURL, function (geometry) {\n                geometry.center();\n                make(geometry);\n            });\n\n        }\n\n        function make(geometry) {\n            var material = new THREE.MeshNormalMaterial();\n            mesh = new THREE.Mesh(geometry, material);\n            var boundingBox = new THREE.Box3().setFromObject(mesh);\n            var sizeHouse = bb.getSize();\n            var sizeObject = boundingBox.getSize();\n            var ratio = sizeObject.divide(sizeHouse);\n            var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n            var invertRatio = 1 / maxRatio;\n            mesh.scale.set(invertRatio, invertRatio, invertRatio);\n            mesh.position.set(0, 0.25, 0);\n            mesh.setRotationFromAxisAngle(vector, Math.PI/2);\n            scene.add(mesh);\n            animate();\n        }\n\n        function init() {\n            var container = document.getElementById(\"container\");\n            rect = container.getBoundingClientRect();\n\n            renderer = new THREE.WebGLRenderer({ antialias: true });\n            renderer.setSize(rect.width - 2, rect.height - 2);\n\n            container.appendChild(renderer.domElement);\n\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0xF8F9FA);\n            camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n            controls = new OrbitControls(camera, container);\n\n            var axes = new THREE.AxesHelper(1);\n            axes.position.set(0, -0.25, 0);\n            scene.add(axes);\n\n            var gridHelper = new THREE.GridHelper(1, 5);\n            gridHelper.position.set(0, -0.25, 0);\n            scene.add(gridHelper);\n\n            var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n            var boxMaterial = new THREE.MeshNormalMaterial();\n            var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n            bb = new THREE.Box3().setFromObject(boxMesh);\n            var height = bb.getSize().y;\n            var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n            camera.position.set(dist + 25, dist + 25, dist + 25);\n            camera.lookAt(boxMesh.position);\n            camera.updateProjectionMatrix();\n\n            window.addEventListener('resize', onWindowResize, false);\n            document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n            document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n        }\n\n        function mousedownfunc() {\n            pause = true;\n        }\n\n        function mouseupfunc() {\n            pause = false;\n        }\n\n        function onWindowResize() {\n            camera.aspect = (rect.width) / (rect.height);\n            camera.updateProjectionMatrix();\n            renderer.setSize(rect.width - 2, rect.height - 2);\n        }\n\n        function animate() {\n            if (!pause) {\n                if (rotate === 'X') {\n                    mesh.rotation.x += 0.01;\n                }\n                else if (rotate === 'Y') {\n                    mesh.rotation.y += 0.01;\n                }\n                else if (rotate === 'Z') {\n                    mesh.rotation.z += 0.01;\n                }\n            }\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                    <div>\n                        <Dropzone onDrop={this.onDrop} noClick={this.state.fileRendered}>{({ getRootProps, getInputProps, isDragActive }) => (\n                            <div>\n                                <div id=\"infoAndInstruc\" style={{ position: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n\n                                <div id=\"container\" style={{ postion: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n                            </div>\n                        )}\n                        </Dropzone>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Render;\n"]},"metadata":{},"sourceType":"module"}