{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js\";\nimport React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\n\nconst GetHelp = require('./GetHelp.js');\n\nconst phoneRegex = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\nconst partySizeRegex = RegExp(/^[1-9][0-9]?$/);\nconst longitudeRegex = RegExp(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/);\nconst latitudeRegex = longitudeRegex;\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nconst round = (float, places) => {\n  return Number(parseFloat(float).toFixed(places));\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCoordinates = async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        latitude: round(position.coords.latitude, 6),\n        longitude: round(position.coords.longitude, 6)\n      }, () => {\n        console.log(this.state.latitude, this.state.longitude);\n        this.getLong();\n        this.getLat();\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log('--Submitting--');\n        GetHelp.getHelp(this.state.name, this.state.partySize, this.state.phonestr.replace(/\\D/g, \"\"), this.state.longitude, this.state.latitude, this.state.message);\n        this.setState({\n          success: true\n        });\n      } else {\n        console.error(\"Invalid Form\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"name\":\n          formErrors.name = value.length < 3 ? \"minimum 3 characters required\" : \"\";\n          break;\n\n        case \"partySize\":\n          formErrors.partySize = partySizeRegex.test(value) ? \"\" : \"not a valid number of people\";\n          break;\n\n        case \"phone\":\n          formErrors.phone = phoneRegex.test(value) ? \"\" : \"invalid phone number\";\n          break;\n\n        case \"longitude\":\n          formErrors.longitude = longitudeRegex.test(value) ? \"\" : \"invalid longitude\";\n          break;\n\n        case \"latitude\":\n          formErrors.latitude = latitudeRegex.test(value) ? \"\" : \"invalid latitude\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: null,\n      phone: null,\n      partySize: null,\n      longitude: null,\n      latitude: null,\n      message: null,\n      formErrors: {\n        name: \"\",\n        partySize: \"\",\n        phone: \"\",\n        longitude: \"\",\n        latitude: \"\",\n        message: \"\"\n      },\n      success: false\n    };\n  }\n\n  getLong() {\n    return this.state.longitude;\n  }\n\n  getLat() {\n    return this.state.latitude;\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Let Us Help You.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: formErrors.name.length > 0 ? \"error\" : null,\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, formErrors.name)), React.createElement(\"div\", {\n      className: \"party-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"partySize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Number Stranded\"), React.createElement(\"input\", {\n      className: formErrors.partySize.length > 0 ? \"error\" : null,\n      placeholder: \"0-99\",\n      type: \"text\",\n      name: \"partySize\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), formErrors.partySize.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, formErrors.partySize)), React.createElement(\"div\", {\n      className: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Your Phone Number\"), React.createElement(\"input\", {\n      className: formErrors.phone.length > 0 ? \"error\" : null,\n      placeholder: \"(---) --- ---\",\n      type: \"phone\",\n      name: \"phone\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), formErrors.phone.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, formErrors.phone)), React.createElement(\"div\", {\n      className: \"longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Longitude\"), React.createElement(\"input\", {\n      className: formErrors.longitude.length > 0 ? \"error\" : null,\n      placeholder: \"0.000000\",\n      type: \"longitude\",\n      name: \"longitude\",\n      value: this.getLong(),\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), formErrors.longitude.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, formErrors.longitude)), React.createElement(\"div\", {\n      className: \"latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(\"input\", {\n      className: formErrors.latitude.length > 0 ? \"error\" : null,\n      placeholder: \"0.000000\",\n      type: \"latitude\",\n      name: \"latitude\",\n      value: this.getLat(),\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), formErrors.phone.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, formErrors.latitude)), React.createElement(\"div\", {\n      className: \"get-coordinates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coord-button\",\n      onClick: () => this.getCoordinates(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Get My Coordinates\")), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Tell us how we can help.\"), React.createElement(\"textarea\", {\n      className: formErrors.message.length > 0 ? \"error\" : null,\n      placeholder: \"Inform us of any outstanding conditions.\",\n      type: \"message\",\n      name: \"message\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), formErrors.message.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, formErrors.message)), React.createElement(\"div\", {\n      className: \"get-help\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.success,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, !this.state.success ? 'Get Help' : 'Submitted!'))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js"],"names":["React","Component","GetHelp","require","phoneRegex","RegExp","partySizeRegex","longitudeRegex","latitudeRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","round","float","places","Number","parseFloat","toFixed","App","constructor","props","getCoordinates","navigator","geolocation","getCurrentPosition","position","setState","latitude","coords","longitude","console","log","state","getLong","getLat","handleSubmit","e","preventDefault","getHelp","name","partySize","phonestr","replace","message","success","error","handleChange","value","target","test","phone","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\nconst GetHelp = require('./GetHelp.js');\n\nconst phoneRegex = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\nconst partySizeRegex = RegExp(/^[1-9][0-9]?$/);\nconst longitudeRegex = RegExp(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/);\nconst latitudeRegex = longitudeRegex;\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n    return valid;\n};\n\nconst round = (float, places) => {\n    return Number(parseFloat(float).toFixed(places));\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  name:       null,\n                        phone:      null,\n                        partySize:  null,\n                        longitude:  null,\n                        latitude:   null,\n                        message:    null,\n                        formErrors: { name: \"\", partySize: \"\", phone: \"\", longitude: \"\", latitude: \"\", message: \"\" },\n                        success:    false\n                     };\n    }\n\n    getCoordinates =  async () => {\n        await navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({\n                latitude: round(position.coords.latitude, 6),\n                longitude: round(position.coords.longitude, 6)\n            }, () => {\n                console.log(this.state.latitude, this.state.longitude);\n                this.getLong();\n                this.getLat();\n            })\n        )\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log('--Submitting--');\n            GetHelp.getHelp(this.state.name,\n                            this.state.partySize,\n                            this.state.phonestr.replace(/\\D/g, \"\"),\n                            this.state.longitude,\n                            this.state.latitude,\n                            this.state.message);\n            this.setState({success: true});\n        }\n        else {\n          console.error(\"Invalid Form\");\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"name\":\n                formErrors.name = value.length < 3 ? \"minimum 3 characters required\" : \"\";\n            break;\n            case \"partySize\":\n                formErrors.partySize = partySizeRegex.test(value) ? \"\" : \"not a valid number of people\";\n            break;\n            case \"phone\":\n                formErrors.phone = phoneRegex.test(value) ? \"\" : \"invalid phone number\";\n            break;\n            case \"longitude\":\n                formErrors.longitude = longitudeRegex.test(value) ? \"\" : \"invalid longitude\";\n            break;\n            case \"latitude\":\n                formErrors.latitude = latitudeRegex.test(value) ? \"\" : \"invalid latitude\";\n            break;\n            default:\n            break;\n        }\n        this.setState({ formErrors, [name]: value });\n    };\n\n    getLong() {\n        return this.state.longitude;\n    }\n\n    getLat() {\n        return this.state.latitude;\n    }\n\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"form-wrapper\">\n                <h1>Let Us Help You.</h1>\n                <form onSubmit={this.handleSubmit} noValidate>\n\n                    <div className=\"name\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input className={formErrors.name.length > 0 ? \"error\" : null}\n                               placeholder=\"Name\"\n                               type=\"text\"\n                               name=\"name\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.name.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.name}</span>\n                        )}\n                    </div>\n\n                    <div className=\"party-size\">\n                        <label htmlFor=\"partySize\">Number Stranded</label>\n                        <input className={formErrors.partySize.length > 0 ? \"error\" : null}\n                               placeholder=\"0-99\"\n                               type=\"text\"\n                               name=\"partySize\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.partySize.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.partySize}</span>\n                        )}\n                    </div>\n\n                    <div className=\"phone\">\n                        <label htmlFor=\"phone\">Your Phone Number</label>\n                        <input className={formErrors.phone.length > 0 ? \"error\" : null}\n                               placeholder=\"(---) --- ---\"\n                               type=\"phone\"\n                               name=\"phone\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.phone.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.phone}</span>\n                        )}\n                    </div>\n\n                    <div className=\"longitude\">\n                        <label htmlFor=\"longitude\">Longitude</label>\n                        <input className={formErrors.longitude.length > 0 ? \"error\" : null}\n                               placeholder=\"0.000000\"\n                               type=\"longitude\"\n                               name=\"longitude\"\n                               value={this.getLong()}\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.longitude.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.longitude}</span>\n                        )}\n                    </div>\n\n                    <div className=\"latitude\">\n                        <label htmlFor=\"latitude\">Latitude</label>\n                        <input className={formErrors.latitude.length > 0 ? \"error\" : null}\n                               placeholder=\"0.000000\"\n                               type=\"latitude\"\n                               name=\"latitude\"\n                               value={this.getLat()}\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.phone.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.latitude}</span>\n                        )}\n                    </div>\n\n                    <div className=\"get-coordinates\">\n                        <div className=\"coord-button\" onClick={() => this.getCoordinates()}>\n                            Get My Coordinates\n                        </div>\n                    </div>\n\n                    <div className=\"message\">\n                        <label htmlFor=\"message\">Tell us how we can help.</label>\n                        <textarea className={formErrors.message.length > 0 ? \"error\" : null}\n                               placeholder=\"Inform us of any outstanding conditions.\"\n                               type=\"message\"\n                               name=\"message\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.message.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.message}</span>\n                        )}\n                    </div>\n\n                    <div className=\"get-help\">\n                        <button type=\"submit\" disabled={this.state.success}>\n                            { !this.state.success ? 'Get Help' : 'Submitted!'}\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}