{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { Redirect } from 'react-router-dom';\n\nvar axios = require('axios'); //Variables that are sent to Price.server.controller\n\n\nvar materialzID = \"\";\nvar finishID = \"\";\nvar city = \"Gainesville\";\nvar zipcode = \"32601\";\nvar currency = \"USD\";\nvar finishes = [];\nvar uploadedFile;\nvar url; //Variables needed for parsing, searching, different things like that\n\nvar supportedFileExtensions = [\"stl\", \"obj\", \"fbx\", \"3ds\"];\nvar materialObjects = [];\nvar finishesObjects = [];\nvar finishNames = ['please choose a material'];\nvar materialz = \"Polyamide (SLS)\";\nvar countryCodes = [\"US\"];\nvar stateCodes = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];\n\nfunction isMaterial(materialPassedIn) {\n  return materialPassedIn.name === materialz;\n}\n\nclass Render extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = files => {\n      var file = files[0];\n      this.renderFile(file);\n    };\n\n    this.getMats = () => {\n      axios.get(\"/api/mat\").then(mat => {\n        var matNames = [];\n        mat.data.forEach(function (element) {\n          materialObjects.push(element);\n          matNames.push(element.name);\n        });\n        this.setState({\n          materialsList: matNames\n        });\n        this.setState({\n          mats: mat.data\n        });\n      });\n    };\n\n    this.onChangeFileUpload = event => {\n      uploadedFile = event.target.files[0];\n    };\n\n    this.state = {\n      currentFile: null,\n      link: null,\n      fileRendered: false\n    };\n    this.onChangeFileUpload = this.onChangeFileUpload.bind(this);\n  }\n\n  handleClick() {\n    this.refs.fileUploader.click();\n  }\n\n  checkExtensionValidity(file) {\n    var fileExtension = file.name.substring(file.name.lastIndexOf('.') + 1, file.name.length) || file.name;\n    if (supportedFileExtensions.includes(fileExtension.toLowerCase())) return true;else return false;\n  }\n\n  renderFile(file) {\n    if (file) {\n      if (this.checkExtensionValidity(file)) {\n        document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n        this.setState({\n          fileRendered: true\n        });\n        this.openFile(file);\n        var text = document.getElementById('but-upload');\n        this.setState({\n          currentFile: file\n        });\n      } else {\n        this.setState({\n          fileRendered: false\n        });\n        document.getElementById('infoAndInstruc').style.visibility = 'visible';\n        document.getElementById(\"renderInstruc\").textContent = \"File not accepted. Try again.\";\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mesh = null;\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n    this.controls = null;\n  }\n\n  componentDidMount() {\n    var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n    var rotate = 'Z';\n    var vector = new THREE.Vector3(-1, 0, 0);\n    var pause = false;\n\n    this.openFile = file => {\n      uploadedFile = file;\n\n      if (!mesh) {\n        init();\n        load(file, true);\n      } else {\n        update();\n        load(file, false);\n      }\n    };\n\n    this.updateOrientation = type => {\n      if (uploadedFile) {\n        if (type === 'XYZ') {\n          vector = new THREE.Vector3(-1, 0, 0);\n        } else if (type === 'XZY') {\n          vector = new THREE.Vector3(0, 0, 1);\n        } else if (type === 'YXZ') {\n          vector = new THREE.Vector3(1, 0, 0);\n        } else if (type === 'YZX') {\n          vector = new THREE.Vector3(0, 1, 0);\n        } else if (type === 'ZXY') {\n          vector = new THREE.Vector3(0, 0, -1);\n        } else if (type === 'ZYX') {\n          vector = new THREE.Vector3(0, -1, 0);\n        }\n\n        update();\n        load(uploadedFile, false);\n      }\n    };\n\n    this.updateRotation = eventKey => {\n      if (uploadedFile) {\n        rotate = eventKey;\n        update();\n        load(uploadedFile, false);\n      }\n    };\n\n    this.updateMaterial = (material, finish) => {\n      if (uploadedFile) {\n        update();\n        load(uploadedFile, false);\n        material = material.replace(/\\s/g, '-');\n        finish = finish.replace(/\\s/g, '-');\n        var materialPath = '/materials/' + material.toLowerCase() + '/' + finish.toLowerCase() + '.png';\n        console.log(materialPath);\n        const vs = `\n                varying vec3 e;\n                varying vec3 n;\n\n                void main() {\n\n                e = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\n                n = normalize( normalMatrix * normal );\n\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1. );\n\n                }\n                `;\n        const fs = `\n                uniform sampler2D tMatCap;\n\n                varying vec3 e;\n                varying vec3 n;\n\n                void main() {\n\n                vec3 r = reflect( e, n );\n                float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\n                vec2 vN = r.xy / m + .5;\n\n                vec3 base = texture2D( tMatCap, vN ).rgb;\n\n                gl_FragColor = vec4( base, 1. );\n\n                }\n                `;\n        selectedMaterial = new THREE.ShaderMaterial({\n          uniforms: {\n            tMatCap: {\n              type: 't',\n              value: THREE.ImageUtils.loadTexture(process.env.PUBLIC_URL + materialPath)\n            }\n          },\n          vertexShader: vs,\n          fragmentShader: fs,\n          flatShading: THREE.SmoothShading\n        });\n        selectedMaterial.uniforms.tMatCap.value.wrapS = selectedMaterial.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\n      }\n    };\n\n    function update() {\n      scene.remove(mesh);\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n\n    function load(file, doAnimate) {\n      const tempURL = URL.createObjectURL(file);\n      var str = file.name.split('.').pop();\n      var ext = str.toLowerCase();\n      var loader;\n\n      if (ext === 'stl') {\n        loader = new STLLoader();\n        loader.load(tempURL, function (geometry) {\n          geometry.center();\n          make(geometry, doAnimate);\n        });\n      } else if (ext === 'obj') {\n        loader = new OBJLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === 'fbx') {\n        loader = new FBXLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === '3ds') {\n        loader = new TDSLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      }\n\n      URL.revokeObjectURL(tempURL);\n    }\n\n    function make(geometry, doAnimate) {\n      var material;\n\n      if (selectedMaterial) {\n        material = selectedMaterial;\n      } else {\n        material = new THREE.MeshNormalMaterial();\n      }\n\n      mesh = new THREE.Mesh(geometry, material);\n      var boundingBox = new THREE.Box3().setFromObject(mesh);\n      var sizeHouse = bb.getSize();\n      var sizeObject = boundingBox.getSize();\n      var ratio = sizeObject.divide(sizeHouse);\n      var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n      var invertRatio = 1 / maxRatio;\n      mesh.scale.set(invertRatio, invertRatio, invertRatio);\n      mesh.position.set(0, 0.25, 0);\n      mesh.setRotationFromAxisAngle(vector, Math.PI / 2);\n      scene.add(mesh);\n\n      if (doAnimate) {\n        animate();\n      }\n    }\n\n    function init() {\n      var container = document.getElementById(\"container\");\n      rect = container.getBoundingClientRect();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(rect.width - 2, rect.height - 2);\n      container.appendChild(renderer.domElement);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF8F9FA);\n      camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n      controls = new OrbitControls(camera, container);\n      var axes = new THREE.AxesHelper(1);\n      axes.position.set(0, -0.25, 0);\n      scene.add(axes);\n      var gridHelper = new THREE.GridHelper(1, 5);\n      gridHelper.position.set(0, -0.25, 0);\n      scene.add(gridHelper);\n      var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n      var boxMaterial = new THREE.MeshNormalMaterial();\n      var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n      bb = new THREE.Box3().setFromObject(boxMesh);\n      var height = bb.getSize().y;\n      var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n      camera.position.set(dist + 25, dist + 25, dist + 25);\n      camera.lookAt(boxMesh.position);\n      camera.updateProjectionMatrix();\n      window.addEventListener('resize', onWindowResize, false);\n      document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n      document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n    }\n\n    function mousedownfunc() {\n      pause = true;\n    }\n\n    function mouseupfunc() {\n      pause = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = rect.width / rect.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(rect.width - 2, rect.height - 2);\n    }\n\n    function animate() {\n      if (!pause) {\n        if (rotate === 'X') {\n          mesh.rotation.x += 0.01;\n        } else if (rotate === 'Y') {\n          mesh.rotation.y += 0.01;\n        } else if (rotate === 'Z') {\n          mesh.rotation.z += 0.01;\n        }\n      }\n\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n\n  getSupportedFileString() {\n    return supportedFileExtensions.join(\", \");\n  } //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n  //Gets the materials and finishes from the API\n\n\n  handleChangeNext(value) {\n    console.log('Sending'); //Maybe need to send?\n    //countryCode: this.state.countryCode, stateCode: this.state.stateCode, city: city, zipcode: zipcode, currency: currency\n  } //Changes the finishes based on the material chosen\n\n\n  handleChangeMaterial(eventKey) {\n    var string = eventKey.toString();\n    var array = string.split(',');\n    var index = array[0];\n    var name = array[1];\n    var text = document.getElementById('but-material');\n    text.textContent = name;\n    this.setState({\n      finishState: false\n    });\n    materialzID = materialObjects[index].materialID;\n    finishesObjects = materialObjects[index].finishes;\n    finishNames = [];\n    materialz = name;\n    var materialChosen = this.state.mats.find(isMaterial);\n    console.log(materialChosen);\n    materialChosen.finishes.forEach(function (element) {\n      finishes.push(element);\n      finishNames.push(element.name);\n    });\n    this.setState({\n      finishList: finishNames,\n      finish: this.state.finishList[0]\n    });\n    finishID = finishes[0].finishID;\n    this.updateMaterial(name, finishNames[0]);\n    document.getElementById('but-material').style.borderColor = \"#949494\";\n    document.getElementById('but-finish').style.borderColor = \"#949494\";\n  }\n\n  checkFinish() {\n    if (this.state.finishState) {\n      return \"Select\";\n    } else {\n      return this.state.finishList[0];\n    }\n  }\n\n  handleChangeFinish(eventKey) {\n    var string = eventKey.toString();\n    var array = string.split(',');\n    var index = array[0];\n    var name = array[1];\n    var text = document.getElementById('but-finish');\n    text.textContent = name;\n    finishID = finishes[index].finishID;\n    this.setState({\n      finish: name\n    });\n    this.updateMaterial(materialz, name);\n    document.getElementById('but-finish').style.borderColor = \"#949494\";\n  }\n\n  handleSubmit(event) {\n    if (materialzID && finishID && this.state.scale) {\n      var text = document.getElementById('priceText');\n      text.textContent = \"Calculating\";\n      document.getElementById('wave').style.display = '';\n      this.setState({\n        cartState: false\n      });\n      this.setState({\n        error: ' '\n      });\n      event.preventDefault();\n      const reactData = {\n        material: materialzID,\n        finish: finishID,\n        countryCode: this.state.countryCode,\n        stateCode: this.state.stateCode,\n        city: city,\n        zipcode: zipcode,\n        currency: currency,\n        scale: this.state.scale,\n        url: url\n      }; //Send the information to Price.server.controller\n\n      axios.post(\"/api/sendMat\", reactData).then(price => //Get the price back from Price.server.controller\n      {\n        console.log(price);\n        this.setState({\n          price: price.data.modelPrice\n        });\n        this.setState({\n          token: price.data.token\n        });\n\n        if (this.state.price == '0') {\n          this.setState({\n            error: \"The dimensions of the model are too large or too small.\"\n          });\n          text.textContent = \"Error\";\n          document.getElementById('wave').style.display = 'none';\n        } else {\n          this.setState({\n            buttonDisabledState: false\n          });\n          text.textContent = \"Add to Cart for: $\" + price.data.modelPrice;\n          document.getElementById('wave').style.display = 'none';\n        }\n      }).catch(err => {\n        text.textContent = \"Error: Please Refresh the Page!\";\n        document.getElementById('wave').style.display = 'none';\n        console.log('error', err);\n      });\n    } else {\n      if (!materialzID) {\n        document.getElementById('but-material').style.borderColor = \"#e32c2b\";\n      }\n\n      if (!finishID) {\n        document.getElementById('but-finish').style.borderColor = \"#e32c2b\";\n      }\n\n      if (!this.state.scale) {\n        document.getElementById('but-scale').style.borderColor = \"#e32c2b\";\n      }\n    }\n  }\n\n  handleChangeScale(eventKey) {\n    this.state.scale = eventKey / 100;\n    var text = document.getElementById('but-scale');\n    text.textContent = eventKey + '%';\n    document.getElementById('but-scale').style.borderColor = \"#949494\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      noClick: this.state.fileRendered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      id: \"infoAndInstruc\",\n      style: {\n        position: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }))), React.createElement(\"div\", Object.assign({\n      id: \"container\",\n      style: {\n        postion: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Render;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js"],"names":["React","Component","THREE","Dropzone","Button","DropdownButton","Dropdown","ButtonGroup","ReactTooltip","OrbitControls","STLLoader","OBJLoader","FBXLoader","TDSLoader","Redirect","axios","require","materialzID","finishID","city","zipcode","currency","finishes","uploadedFile","url","supportedFileExtensions","materialObjects","finishesObjects","finishNames","materialz","countryCodes","stateCodes","isMaterial","materialPassedIn","name","Render","constructor","props","onDrop","files","file","renderFile","getMats","get","then","mat","matNames","data","forEach","element","push","setState","materialsList","mats","onChangeFileUpload","event","target","state","currentFile","link","fileRendered","bind","handleClick","refs","fileUploader","click","checkExtensionValidity","fileExtension","substring","lastIndexOf","length","includes","toLowerCase","document","getElementById","style","visibility","openFile","text","textContent","componentWillUnmount","mesh","renderer","scene","camera","controls","componentDidMount","bb","rect","selectedMaterial","rotate","vector","Vector3","pause","init","load","update","updateOrientation","type","updateRotation","eventKey","updateMaterial","material","finish","replace","materialPath","console","log","vs","fs","ShaderMaterial","uniforms","tMatCap","value","ImageUtils","loadTexture","process","env","PUBLIC_URL","vertexShader","fragmentShader","flatShading","SmoothShading","wrapS","wrapT","ClampToEdgeWrapping","remove","geometry","dispose","doAnimate","tempURL","URL","createObjectURL","str","split","pop","ext","loader","center","make","object","g","Geometry","fromBufferGeometry","children","revokeObjectURL","MeshNormalMaterial","Mesh","boundingBox","Box3","setFromObject","sizeHouse","getSize","sizeObject","ratio","divide","maxRatio","Math","max","x","y","z","invertRatio","scale","set","position","setRotationFromAxisAngle","PI","add","animate","container","getBoundingClientRect","WebGLRenderer","antialias","setSize","width","height","appendChild","domElement","Scene","background","Color","PerspectiveCamera","axes","AxesHelper","gridHelper","GridHelper","boxGeometry","BoxGeometry","boxMaterial","boxMesh","dist","tan","lookAt","updateProjectionMatrix","window","addEventListener","onWindowResize","mousedownfunc","mouseupfunc","aspect","rotation","requestAnimationFrame","render","getSupportedFileString","join","handleChangeNext","handleChangeMaterial","string","toString","array","index","finishState","materialID","materialChosen","find","finishList","borderColor","checkFinish","handleChangeFinish","handleSubmit","display","cartState","error","preventDefault","reactData","countryCode","stateCode","post","price","modelPrice","token","buttonDisabledState","catch","err","handleChangeScale","getRootProps","getInputProps","isDragActive","marginRight","borderStyle","justifyContent","alignItems","backgroundColor","postion"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone'\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader';\nimport {TDSLoader} from 'three/examples/jsm/loaders/TDSLoader';\nimport {Redirect} from 'react-router-dom';\nvar axios = require('axios');\n\n//Variables that are sent to Price.server.controller\nvar materialzID = \"\";\nvar finishID = \"\";\nvar city = \"Gainesville\"\nvar zipcode = \"32601\"\nvar currency = \"USD\";\nvar finishes = [];\nvar uploadedFile;\nvar url;\n\n//Variables needed for parsing, searching, different things like that\nvar supportedFileExtensions = [\"stl\", \"obj\", \"fbx\", \"3ds\"]\nvar materialObjects = [];\nvar finishesObjects = [];\nvar finishNames = ['please choose a material'];\nvar materialz = \"Polyamide (SLS)\";\nvar countryCodes = [\"US\"];\nvar stateCodes = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"]\n\nfunction isMaterial(materialPassedIn) {\n    return materialPassedIn.name === materialz;\n}\n\nclass Render extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentFile: null,\n            link: null,\n            fileRendered: false\n        };\n\n        this.onChangeFileUpload = this.onChangeFileUpload.bind(this)\n    }\n\n    handleClick() {\n        this.refs.fileUploader.click();\n    }\n\n    checkExtensionValidity(file) {\n      var fileExtension = file.name.substring(file.name.lastIndexOf('.')+1, file.name.length) || file.name;\n\n      if (supportedFileExtensions.includes(fileExtension.toLowerCase())) return true;\n      else return false;\n    }\n\n    renderFile(file) {\n        if (file) {\n            if (this.checkExtensionValidity(file)) {\n                document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n                this.setState({ fileRendered: true });\n                this.openFile(file);\n                var text = document.getElementById('but-upload');\n                this.setState({ currentFile: file });\n            }\n            else {\n                this.setState({ fileRendered: false });\n                document.getElementById('infoAndInstruc').style.visibility = 'visible';\n                document.getElementById(\"renderInstruc\").textContent = \"File not accepted. Try again.\";\n            }\n        }\n    }\n\n    onDrop = (files) => {\n        var file = files[0];\n        this.renderFile(file);\n    }\n\n    \n\n    componentWillUnmount() {\n        this.mesh = null;\n        this.renderer = null;\n        this.scene = null;\n        this.camera = null;\n        this.controls = null;\n    }\n\n    componentDidMount() {\n        var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n        var rotate = 'Z';\n        var vector = new THREE.Vector3(-1, 0, 0);\n        var pause = false;\n\n        this.openFile = (file) => {\n            uploadedFile = file;\n            if (!mesh) {\n                init();\n                load(file, true);\n            }\n            else {\n                update();\n                load(file, false);\n            }\n        }\n\n        this.updateOrientation = (type) => {\n            if (uploadedFile) {\n                if (type === 'XYZ') {\n                    vector = new THREE.Vector3(-1, 0, 0);\n                }\n                else if (type === 'XZY') {\n                    vector = new THREE.Vector3(0, 0, 1);\n                }\n                else if (type === 'YXZ') {\n                    vector = new THREE.Vector3(1, 0, 0);\n                }\n                else if (type === 'YZX') {\n                    vector = new THREE.Vector3(0, 1, 0);\n                }\n                else if (type === 'ZXY') {\n                    vector = new THREE.Vector3(0, 0, -1);\n                }\n                else if (type === 'ZYX') {\n                    vector = new THREE.Vector3(0, -1, 0);\n                }\n                update();\n                load(uploadedFile, false);\n            }\n        }\n\n        this.updateRotation = (eventKey) => {\n            if (uploadedFile) {\n                rotate = eventKey;\n                update();\n                load(uploadedFile, false);\n            }\n        }\n\n        this.updateMaterial = (material, finish) => {\n            if (uploadedFile) {\n                update();\n                load(uploadedFile, false);\n\n                material = material.replace(/\\s/g, '-');\n                finish = finish.replace(/\\s/g, '-');\n                var materialPath = '/materials/' + material.toLowerCase() + '/' + finish.toLowerCase() + '.png';\n                console.log(materialPath);\n\n                const vs = `\n                varying vec3 e;\n                varying vec3 n;\n\n                void main() {\n\n                e = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\n                n = normalize( normalMatrix * normal );\n\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1. );\n\n                }\n                `;\n\n                const fs = `\n                uniform sampler2D tMatCap;\n\n                varying vec3 e;\n                varying vec3 n;\n\n                void main() {\n\n                vec3 r = reflect( e, n );\n                float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\n                vec2 vN = r.xy / m + .5;\n\n                vec3 base = texture2D( tMatCap, vN ).rgb;\n\n                gl_FragColor = vec4( base, 1. );\n\n                }\n                `;\n\n                selectedMaterial = new THREE.ShaderMaterial({\n                uniforms: {\n                    tMatCap: {\n                    type: 't',\n                    value: THREE.ImageUtils.loadTexture(process.env.PUBLIC_URL + materialPath)\n                    },\n                },\n                vertexShader: vs,\n                fragmentShader: fs,\n                flatShading: THREE.SmoothShading\n                });\n                selectedMaterial.uniforms.tMatCap.value.wrapS = selectedMaterial.uniforms.tMatCap.value.wrapT = THREE.ClampToEdgeWrapping;\n            }\n        }\n\n        function update() {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n            mesh.material.dispose();\n        }\n\n        function load(file, doAnimate) {\n            const tempURL = URL.createObjectURL(file);\n\n            var str = file.name.split('.').pop();\n            var ext = str.toLowerCase();\n            var loader;\n\n            if (ext === 'stl') {\n                loader = new STLLoader();\n                loader.load(tempURL, function (geometry) {\n                    geometry.center();\n                    make(geometry, doAnimate);\n                });\n            }\n            else if (ext === 'obj') {\n                loader = new OBJLoader();\n                loader.load(tempURL, function (object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === 'fbx') {\n                loader = new FBXLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === '3ds') {\n                loader = new TDSLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n\n            URL.revokeObjectURL(tempURL);\n        }\n\n        function make(geometry, doAnimate) {\n            var material;\n            if (selectedMaterial) {\n                material = selectedMaterial;\n            }\n            else {\n                material = new THREE.MeshNormalMaterial();\n            }\n            mesh = new THREE.Mesh(geometry, material);\n            var boundingBox = new THREE.Box3().setFromObject(mesh);\n            var sizeHouse = bb.getSize();\n            var sizeObject = boundingBox.getSize();\n            var ratio = sizeObject.divide(sizeHouse);\n            var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n            var invertRatio = 1 / maxRatio;\n            mesh.scale.set(invertRatio, invertRatio, invertRatio);\n            mesh.position.set(0, 0.25, 0);\n            mesh.setRotationFromAxisAngle(vector, Math.PI/2);\n            scene.add(mesh);\n            if (doAnimate) {\n                animate();\n            }\n        }\n\n        function init() {\n            var container = document.getElementById(\"container\");\n            rect = container.getBoundingClientRect();\n\n            renderer = new THREE.WebGLRenderer({ antialias: true });\n            renderer.setSize(rect.width - 2, rect.height - 2);\n\n            container.appendChild(renderer.domElement);\n\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0xF8F9FA);\n            camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n            controls = new OrbitControls(camera, container);\n\n            var axes = new THREE.AxesHelper(1);\n            axes.position.set(0, -0.25, 0);\n            scene.add(axes);\n\n            var gridHelper = new THREE.GridHelper(1, 5);\n            gridHelper.position.set(0, -0.25, 0);\n            scene.add(gridHelper);\n\n            var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n            var boxMaterial = new THREE.MeshNormalMaterial();\n            var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n            bb = new THREE.Box3().setFromObject(boxMesh);\n            var height = bb.getSize().y;\n            var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n            camera.position.set(dist + 25, dist + 25, dist + 25);\n            camera.lookAt(boxMesh.position);\n            camera.updateProjectionMatrix();\n\n            window.addEventListener('resize', onWindowResize, false);\n            document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n            document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n        }\n\n        function mousedownfunc() {\n            pause = true;\n        }\n\n        function mouseupfunc() {\n            pause = false;\n        }\n\n        function onWindowResize() {\n            camera.aspect = (rect.width) / (rect.height);\n            camera.updateProjectionMatrix();\n            renderer.setSize(rect.width - 2, rect.height - 2);\n        }\n\n        function animate() {\n            if (!pause) {\n                if (rotate === 'X') {\n                    mesh.rotation.x += 0.01;\n                }\n                else if (rotate === 'Y') {\n                    mesh.rotation.y += 0.01;\n                }\n                else if (rotate === 'Z') {\n                    mesh.rotation.z += 0.01;\n                }\n            }\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n    }\n\n    getSupportedFileString() {\n      return supportedFileExtensions.join(\", \")\n    }\n\n    //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n    //Gets the materials and finishes from the API\n    getMats = () =>\n    {\n        axios.get(\"/api/mat\")\n        .then((mat) =>\n        {\n            var matNames = [];\n            mat.data.forEach(function(element){\n                materialObjects.push(element)\n                matNames.push(element.name)\n            });\n            this.setState({ materialsList: matNames })\n            this.setState({mats: mat.data})\n        })\n    }\n\n    handleChangeNext(value){\n        console.log('Sending')\n        //Maybe need to send?\n        //countryCode: this.state.countryCode, stateCode: this.state.stateCode, city: city, zipcode: zipcode, currency: currency\n    }\n\n    //Changes the finishes based on the material chosen\n    handleChangeMaterial(eventKey) {\n        var string = eventKey.toString();\n        var array = string.split(',');\n        var index = array[0];\n        var name = array[1];\n        var text = document.getElementById('but-material');\n        text.textContent = name;\n        this.setState({finishState: false});\n\n        materialzID = materialObjects[index].materialID;\n        finishesObjects = materialObjects[index].finishes\n\n        finishNames = [];\n        materialz = name;\n        var materialChosen = this.state.mats.find(isMaterial);\n        console.log(materialChosen)\n\n        materialChosen.finishes.forEach(function(element){\n            finishes.push(element)\n            finishNames.push(element.name);\n        });\n\n        this.setState({finishList: finishNames, finish: this.state.finishList[0]})\n        finishID = finishes[0].finishID;\n\n        this.updateMaterial(name, finishNames[0]);\n        document.getElementById('but-material').style.borderColor = \"#949494\";\n        document.getElementById('but-finish').style.borderColor = \"#949494\";\n    }\n\n    checkFinish() {\n        if (this.state.finishState) {\n            return \"Select\";\n        }\n        else {\n            return this.state.finishList[0];\n        }\n    }\n\n    handleChangeFinish(eventKey) {\n        var string = eventKey.toString();\n        var array = string.split(',');\n        var index = array[0];\n        var name = array[1];\n        var text = document.getElementById('but-finish');\n        text.textContent = name;\n\n        finishID = finishes[index].finishID;\n        this.setState({finish: name})\n        this.updateMaterial(materialz, name);\n        document.getElementById('but-finish').style.borderColor = \"#949494\";\n    }\n\n    onChangeFileUpload=event=>{\n        uploadedFile = event.target.files[0];\n    }\n\n    handleSubmit(event) {\n        if (materialzID && finishID && this.state.scale) {\n            var text = document.getElementById('priceText');\n            text.textContent = \"Calculating\";\n            document.getElementById('wave').style.display = '';\n            this.setState({cartState: false});\n            this.setState({error: ' '});\n            event.preventDefault();\n\n            const reactData = {\n                material: materialzID,\n                finish: finishID,\n                countryCode: this.state.countryCode,\n                stateCode: this.state.stateCode,\n                city: city,\n                zipcode: zipcode,\n                currency: currency,\n                scale: this.state.scale,\n                url: url\n            }\n\n            //Send the information to Price.server.controller\n            axios.post(\"/api/sendMat\", reactData)\n                .then((price) => //Get the price back from Price.server.controller\n                {\n                    console.log(price)\n                    this.setState({price: price.data.modelPrice})\n                    this.setState({token: price.data.token})\n                    if (this.state.price == '0') {\n                        this.setState({error: \"The dimensions of the model are too large or too small.\"})\n                        text.textContent = \"Error\";\n                        document.getElementById('wave').style.display = 'none';\n                    } else {\n                        this.setState({buttonDisabledState: false});\n                      text.textContent = \"Add to Cart for: $\" + price.data.modelPrice;\n                      document.getElementById('wave').style.display = 'none';\n                    }\n                })\n                .catch((err) => {\n                    text.textContent = \"Error: Please Refresh the Page!\";\n                    document.getElementById('wave').style.display = 'none';\n                    console.log('error', err)\n                })\n        }\n        else {\n            if (!materialzID) {\n                document.getElementById('but-material').style.borderColor = \"#e32c2b\";\n            }\n            if (!finishID) {\n                document.getElementById('but-finish').style.borderColor = \"#e32c2b\";\n            }\n            if (!this.state.scale) {\n                document.getElementById('but-scale').style.borderColor = \"#e32c2b\";\n            }\n        }\n    }\n\n    handleChangeScale(eventKey){\n        this.state.scale = eventKey/100;\n        var text = document.getElementById('but-scale');\n        text.textContent = eventKey + '%';\n\n        document.getElementById('but-scale').style.borderColor = \"#949494\";\n    }\n\n    render() {\n        return (\n            <div>\n                    <div>\n                        <Dropzone onDrop={this.onDrop} noClick={this.state.fileRendered}>{({ getRootProps, getInputProps, isDragActive }) => (\n                            <div>\n                                <div id=\"infoAndInstruc\" style={{ position: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n\n                                <div id=\"container\" style={{ postion: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n                            </div>\n                        )}\n                        </Dropzone>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Render;\n"]},"metadata":{},"sourceType":"module"}