{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { Redirect } from 'react-router-dom';\n\nvar axios = require('axios');\n\nclass Render extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = files => {\n      var file = files[0];\n      this.renderFile(file);\n    };\n\n    this.getMats = () => {\n      axios.get(\"/api/mat\").then(mat => {\n        var matNames = [];\n        mat.data.forEach(function (element) {\n          materialObjects.push(element);\n          matNames.push(element.name);\n        });\n        this.setState({\n          materialsList: matNames\n        });\n        this.setState({\n          mats: mat.data\n        });\n      });\n    };\n\n    this.state = {\n      currentFile: null,\n      link: null,\n      fileRendered: false\n    };\n    this.onChangeFileUpload = this.onChangeFileUpload.bind(this);\n  }\n\n  handleClick() {\n    this.refs.fileUploader.click();\n  }\n\n  renderFile(file) {\n    if (file) {\n      document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n      this.setState({\n        fileRendered: true\n      });\n      this.openFile(file);\n      var text = document.getElementById('but-upload');\n      this.setState({\n        currentFile: file\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mesh = null;\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n    this.controls = null;\n  }\n\n  componentDidMount() {\n    var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n    var rotate = 'Z';\n    var vector = new THREE.Vector3(-1, 0, 0);\n    var pause = false;\n\n    this.openFile = file => {\n      uploadedFile = file;\n\n      if (!mesh) {\n        init();\n        load(file, true);\n      } else {\n        update();\n        load(file, false);\n      }\n    };\n\n    function update() {\n      scene.remove(mesh);\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n\n    function load(file, doAnimate) {\n      const tempURL = URL.createObjectURL(file);\n      var str = file.name.split('.').pop();\n      var ext = str.toLowerCase();\n      var loader;\n\n      if (ext === 'stl') {\n        loader = new STLLoader();\n        loader.load(tempURL, function (geometry) {\n          geometry.center();\n          make(geometry, doAnimate);\n        });\n      } else if (ext === 'obj') {\n        loader = new OBJLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === 'fbx') {\n        loader = new FBXLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      } else if (ext === '3ds') {\n        loader = new TDSLoader();\n        loader.load(tempURL, function (object) {\n          var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n          g.center();\n          make(g, doAnimate);\n        });\n      }\n\n      URL.revokeObjectURL(tempURL);\n    }\n\n    function make(geometry, doAnimate) {\n      var material;\n\n      if (selectedMaterial) {\n        material = selectedMaterial;\n      } else {\n        material = new THREE.MeshNormalMaterial();\n      }\n\n      mesh = new THREE.Mesh(geometry, material);\n      var boundingBox = new THREE.Box3().setFromObject(mesh);\n      var sizeHouse = bb.getSize();\n      var sizeObject = boundingBox.getSize();\n      var ratio = sizeObject.divide(sizeHouse);\n      var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n      var invertRatio = 1 / maxRatio;\n      mesh.scale.set(invertRatio, invertRatio, invertRatio);\n      mesh.position.set(0, 0.25, 0);\n      mesh.setRotationFromAxisAngle(vector, Math.PI / 2);\n      scene.add(mesh);\n\n      if (doAnimate) {\n        animate();\n      }\n    }\n\n    function init() {\n      var container = document.getElementById(\"container\");\n      rect = container.getBoundingClientRect();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(rect.width - 2, rect.height - 2);\n      container.appendChild(renderer.domElement);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF8F9FA);\n      camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n      controls = new OrbitControls(camera, container);\n      var axes = new THREE.AxesHelper(1);\n      axes.position.set(0, -0.25, 0);\n      scene.add(axes);\n      var gridHelper = new THREE.GridHelper(1, 5);\n      gridHelper.position.set(0, -0.25, 0);\n      scene.add(gridHelper);\n      var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n      var boxMaterial = new THREE.MeshNormalMaterial();\n      var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n      bb = new THREE.Box3().setFromObject(boxMesh);\n      var height = bb.getSize().y;\n      var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n      camera.position.set(dist + 25, dist + 25, dist + 25);\n      camera.lookAt(boxMesh.position);\n      camera.updateProjectionMatrix();\n      window.addEventListener('resize', onWindowResize, false);\n      document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n      document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n    }\n\n    function mousedownfunc() {\n      pause = true;\n    }\n\n    function mouseupfunc() {\n      pause = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = rect.width / rect.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(rect.width - 2, rect.height - 2);\n    }\n\n    function animate() {\n      if (!pause) {\n        if (rotate === 'X') {\n          mesh.rotation.x += 0.01;\n        } else if (rotate === 'Y') {\n          mesh.rotation.y += 0.01;\n        } else if (rotate === 'Z') {\n          mesh.rotation.z += 0.01;\n        }\n      }\n\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n\n  getSupportedFileString() {\n    return supportedFileExtensions.join(\", \");\n  } //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n  //Gets the materials and finishes from the API\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      noClick: this.state.fileRendered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      id: \"infoAndInstruc\",\n      style: {\n        position: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))), React.createElement(\"div\", Object.assign({\n      id: \"container\",\n      style: {\n        postion: \"absolute\",\n        marginRight: \"70px\",\n        borderStyle: \"solid\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: \"700px\",\n        width: \"700px\",\n        backgroundColor: \"#F8F9FA\"\n      }\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Render;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/Render/Render.js"],"names":["React","Component","THREE","Dropzone","Button","DropdownButton","Dropdown","ButtonGroup","ReactTooltip","OrbitControls","STLLoader","OBJLoader","FBXLoader","TDSLoader","Redirect","axios","require","Render","constructor","props","onDrop","files","file","renderFile","getMats","get","then","mat","matNames","data","forEach","element","materialObjects","push","name","setState","materialsList","mats","state","currentFile","link","fileRendered","onChangeFileUpload","bind","handleClick","refs","fileUploader","click","document","getElementById","style","visibility","openFile","text","componentWillUnmount","mesh","renderer","scene","camera","controls","componentDidMount","bb","rect","uploadedFile","selectedMaterial","rotate","vector","Vector3","pause","init","load","update","remove","geometry","dispose","material","doAnimate","tempURL","URL","createObjectURL","str","split","pop","ext","toLowerCase","loader","center","make","object","g","Geometry","fromBufferGeometry","children","revokeObjectURL","MeshNormalMaterial","Mesh","boundingBox","Box3","setFromObject","sizeHouse","getSize","sizeObject","ratio","divide","maxRatio","Math","max","x","y","z","invertRatio","scale","set","position","setRotationFromAxisAngle","PI","add","animate","container","getBoundingClientRect","WebGLRenderer","antialias","setSize","width","height","appendChild","domElement","Scene","background","Color","PerspectiveCamera","axes","AxesHelper","gridHelper","GridHelper","boxGeometry","BoxGeometry","boxMaterial","boxMesh","dist","tan","lookAt","updateProjectionMatrix","window","addEventListener","onWindowResize","mousedownfunc","mouseupfunc","aspect","rotation","requestAnimationFrame","render","getSupportedFileString","supportedFileExtensions","join","getRootProps","getInputProps","isDragActive","marginRight","borderStyle","display","justifyContent","alignItems","backgroundColor","postion"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as THREE from 'three';\nimport Dropzone from 'react-dropzone'\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ReactTooltip from 'react-tooltip';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader';\nimport {TDSLoader} from 'three/examples/jsm/loaders/TDSLoader';\nimport {Redirect} from 'react-router-dom';\nvar axios = require('axios');\n\nclass Render extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentFile: null,\n            link: null,\n            fileRendered: false\n        };\n\n        this.onChangeFileUpload = this.onChangeFileUpload.bind(this)\n    }\n\n    handleClick() {\n        this.refs.fileUploader.click();\n    }\n\n\n    renderFile(file) {\n        if (file) {\n          document.getElementById('infoAndInstruc').style.visibility = 'hidden';\n          this.setState({ fileRendered: true });\n          this.openFile(file);\n          var text = document.getElementById('but-upload');\n          this.setState({ currentFile: file });\n        }\n    }\n\n    onDrop = (files) => {\n        var file = files[0];\n        this.renderFile(file);\n    }\n\n    componentWillUnmount() {\n        this.mesh = null;\n        this.renderer = null;\n        this.scene = null;\n        this.camera = null;\n        this.controls = null;\n    }\n\n    componentDidMount() {\n        var mesh, renderer, scene, camera, controls, bb, rect, uploadedFile, selectedMaterial;\n        var rotate = 'Z';\n        var vector = new THREE.Vector3(-1, 0, 0);\n        var pause = false;\n\n        this.openFile = (file) => {\n            uploadedFile = file;\n            if (!mesh) {\n                init();\n                load(file, true);\n            }\n            else {\n                update();\n                load(file, false);\n            }\n        }\n\n\n        function update() {\n            scene.remove(mesh);\n            mesh.geometry.dispose();\n            mesh.material.dispose();\n        }\n\n        function load(file, doAnimate) {\n            const tempURL = URL.createObjectURL(file);\n\n            var str = file.name.split('.').pop();\n            var ext = str.toLowerCase();\n            var loader;\n\n            if (ext === 'stl') {\n                loader = new STLLoader();\n                loader.load(tempURL, function (geometry) {\n                    geometry.center();\n                    make(geometry, doAnimate);\n                });\n            }\n            else if (ext === 'obj') {\n                loader = new OBJLoader();\n                loader.load(tempURL, function (object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === 'fbx') {\n                loader = new FBXLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n            else if (ext === '3ds') {\n                loader = new TDSLoader();\n                loader.load(tempURL, function(object) {\n                    var g = new THREE.Geometry().fromBufferGeometry(object.children[\"0\"].geometry);\n                    g.center();\n                    make(g, doAnimate);\n                });\n            }\n\n            URL.revokeObjectURL(tempURL);\n        }\n\n        function make(geometry, doAnimate) {\n            var material;\n            if (selectedMaterial) {\n                material = selectedMaterial;\n            }\n            else {\n                material = new THREE.MeshNormalMaterial();\n            }\n            mesh = new THREE.Mesh(geometry, material);\n            var boundingBox = new THREE.Box3().setFromObject(mesh);\n            var sizeHouse = bb.getSize();\n            var sizeObject = boundingBox.getSize();\n            var ratio = sizeObject.divide(sizeHouse);\n            var maxRatio = Math.max(ratio.x, ratio.y, ratio.z);\n            var invertRatio = 1 / maxRatio;\n            mesh.scale.set(invertRatio, invertRatio, invertRatio);\n            mesh.position.set(0, 0.25, 0);\n            mesh.setRotationFromAxisAngle(vector, Math.PI/2);\n            scene.add(mesh);\n            if (doAnimate) {\n                animate();\n            }\n        }\n\n        function init() {\n            var container = document.getElementById(\"container\");\n            rect = container.getBoundingClientRect();\n\n            renderer = new THREE.WebGLRenderer({ antialias: true });\n            renderer.setSize(rect.width - 2, rect.height - 2);\n\n            container.appendChild(renderer.domElement);\n\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0xF8F9FA);\n            camera = new THREE.PerspectiveCamera(1, rect.width / rect.height, 1, 1000);\n            controls = new OrbitControls(camera, container);\n\n            var axes = new THREE.AxesHelper(1);\n            axes.position.set(0, -0.25, 0);\n            scene.add(axes);\n\n            var gridHelper = new THREE.GridHelper(1, 5);\n            gridHelper.position.set(0, -0.25, 0);\n            scene.add(gridHelper);\n\n            var boxGeometry = new THREE.BoxGeometry(1, 1, 1);\n            var boxMaterial = new THREE.MeshNormalMaterial();\n            var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n            bb = new THREE.Box3().setFromObject(boxMesh);\n            var height = bb.getSize().y;\n            var dist = height / 2 / Math.tan(Math.PI * 1 / 360);\n            camera.position.set(dist + 25, dist + 25, dist + 25);\n            camera.lookAt(boxMesh.position);\n            camera.updateProjectionMatrix();\n\n            window.addEventListener('resize', onWindowResize, false);\n            document.getElementById(\"container\").addEventListener('mousedown', mousedownfunc, false);\n            document.getElementById(\"container\").addEventListener('mouseup', mouseupfunc, false);\n        }\n\n        function mousedownfunc() {\n            pause = true;\n        }\n\n        function mouseupfunc() {\n            pause = false;\n        }\n\n        function onWindowResize() {\n            camera.aspect = (rect.width) / (rect.height);\n            camera.updateProjectionMatrix();\n            renderer.setSize(rect.width - 2, rect.height - 2);\n        }\n\n        function animate() {\n            if (!pause) {\n                if (rotate === 'X') {\n                    mesh.rotation.x += 0.01;\n                }\n                else if (rotate === 'Y') {\n                    mesh.rotation.y += 0.01;\n                }\n                else if (rotate === 'Z') {\n                    mesh.rotation.z += 0.01;\n                }\n            }\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n    }\n\n    getSupportedFileString() {\n      return supportedFileExtensions.join(\", \")\n    }\n\n    //<-------------------------------------------------------------------------Copied from Material.js Component------------------------------------------------------------------------->\n    //Gets the materials and finishes from the API\n    getMats = () =>\n    {\n        axios.get(\"/api/mat\")\n        .then((mat) =>\n        {\n            var matNames = [];\n            mat.data.forEach(function(element){\n                materialObjects.push(element)\n                matNames.push(element.name)\n            });\n            this.setState({ materialsList: matNames })\n            this.setState({mats: mat.data})\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                    <div>\n                        <Dropzone onDrop={this.onDrop} noClick={this.state.fileRendered}>{({ getRootProps, getInputProps, isDragActive }) => (\n                            <div>\n                                <div id=\"infoAndInstruc\" style={{ position: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n\n                                <div id=\"container\" style={{ postion: \"absolute\", marginRight: \"70px\", borderStyle: \"solid\", display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"700px\", width: \"700px\", backgroundColor: \"#F8F9FA\" }} {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                </div>\n                            </div>\n                        )}\n                        </Dropzone>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Render;\n"]},"metadata":{},"sourceType":"module"}